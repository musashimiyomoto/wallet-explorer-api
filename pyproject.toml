[tool.poetry]
name = "wallet-explorer-api"
version = "0.1.0"
description = "Wallet Explorer API"
authors = ["kioharu"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "3.11.*"
alembic = "1.14.1"
fastapi = { extras = ["standard"], version = "0.115.7" }
gunicorn = { extras = ["gevent"], version = "23.0.0" }
pydantic = "2.11.7"
pydantic-settings = "2.10.1"
sqlalchemy = "2.0.37"
asyncpg = "0.28.0"
tronpy = "0.4.0"
taskiq = "0.11.18"
taskiq-nats = "0.5.1"
taskiq-redis = "1.1.0"
taskiq-fastapi = "0.3.5"
python-multipart = "0.0.20"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "*"
isort = "*"
pre-commit = "*"
pyright = { extras = ["nodejs"], version = "*" }
ruff = "*"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
factory-boy = "*"
faker = "*"
aiosqlite = "*"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
atomic = true
profile = "black"
py_version = 311
line_length = 88
skip_gitignore = true
multi_line_output = 3

[tool.ruff.lint]
select = [
    "F",    # Pyflakes
    "E",    # pycodestyle
    "W",    # pycodestyle
    "C90",  # mccabe
    "I",    # isort
    "N",    # pep8-naming
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "EM",   # flake8-errmsg
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PT",   # flake8-pytest-style
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TC",   # flake8-type-checking
    "PTH",  # flake8-use-pathlib
    "PGH",  # pygrep-hooks
    "PL",   # Pylint
    "TRY",  # tryceratops
    "PERF", # Perflint
    "FURB", # refurb
    "FAST", # FastAPI
]
exclude = ["db/alembic/versions/*.py", "db/alembic/env.py"]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "S101",    # "Use of `assert` detected"
]

[tool.pyright]
typeCheckingMode = "standard"
pythonVersion = "3.11"
ignore = ["db"]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::sqlalchemy.exc.MovedIn20Warning",
    "ignore::pydantic._internal._config.PydanticDeprecatedSince20"
]

[tool.coverage.run]
omit = ["tests/*", "db/alembic/versions/*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
